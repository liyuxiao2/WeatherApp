{"version":3,"file":"bundle.js","mappings":"mBAGA,IAAIA,EAASC,SAASC,eAAe,UAErC,MAAMC,EAAe,CACjB,YAAa,KACb,cAAe,KACf,oBAAqB,IACrB,sBAAuB,OACvB,OAAU,KACV,IAAO,MACP,KAAQ,KACR,KAAQ,MACR,cAAe,MACf,gBAAiB,MACjB,KAAQ,KACR,aAAgB,KAChB,KAAQ,OAQZH,EAAOI,iBAAiB,SAASC,MAAOC,IACpCA,EAAEC,iBAEF,IAAIC,EAAWP,SAASC,eAAe,YAAYO,OAOvD,SAAuBC,GACnB,IAAIC,EAAW,GAEXC,EAAOX,SAASC,eAAe,QAC/BW,EAAOZ,SAASC,eAAe,QAC/BY,EAAcb,SAASC,eAAe,eACtCa,EAAcd,SAASC,eAAe,eACtCc,EAAOf,SAASC,eAAe,QAEnCS,EAASM,KAAKL,EAAMC,EAAMC,EAAaC,EAAaC,GAEpDL,EAASO,SAASC,IACC,SAAZA,EAAKC,GAIRD,EAAKE,YAAcX,EAAKS,EAAKC,IAHzBD,EAAKE,YA3BjB,SAAiBL,GACb,OAAOb,EAAaa,EACxB,CAyB+BM,CAAQZ,EAAKS,EAAKC,IAGT,GAExC,CArBIG,OCfWlB,eAA4BO,GACvC,IACI,MAAMY,QAjBdnB,eAA0BO,GACtB,IACI,MAAMa,QAAiBC,MACnB,uFAAuFd,yCAM3F,aAFmBa,EAASE,MAGhC,CAAE,MAAMC,GACJC,QAAQC,IAAIF,EAChB,CACJ,CAI8BG,CAAWnB,GAE3BoB,EAAc,CAChBnB,KAAMW,EAAQS,kBAAkBC,SAChCtB,KAAMY,EAAQW,gBACdrB,YAAaU,EAAQS,kBAAkBG,KACvCC,UAAWb,EAAQS,kBAAkBK,UACrCvB,YAAaS,EAAQS,kBAAkBM,WACvCvB,KAAMQ,EAAQS,kBAAkBjB,MAKpC,OAFAa,QAAQC,IAAIE,GAELA,CACX,CAAE,MAAMJ,GACJC,QAAQC,IAAIF,EAChB,CACJ,CDNqBY,CAAahC,GAEX,G","sources":["webpack:///./src/index.js","webpack:///./src/weather.js"],"sourcesContent":["import  parseWeather  from './weather.js';\nimport './index.css';\n\nlet search = document.getElementById('search');\n\nconst weatherIcons = {\n    \"clear-day\": \"☀️\",\n    \"clear-night\": \"🌙\",\n    \"partly-cloudy-day\": \"⛅\",\n    \"partly-cloudy-night\": \"🌙☁️\",\n    \"cloudy\": \"☁️\",\n    \"fog\": \"🌫️\",\n    \"wind\": \"💨\",\n    \"rain\": \"🌧️\",\n    \"showers-day\": \"🌦️\",\n    \"showers-night\": \"🌧️\",\n    \"snow\": \"❄️\",\n    \"thunderstorm\": \"⛈️\",\n    \"hail\": \"🌨️\"\n};\n\n\nfunction getIcon(icon){\n    return weatherIcons[icon];\n}\n\nsearch.addEventListener('click', async (e) => {\n    e.preventDefault();\n\n    let location = document.getElementById('location').value;\n\n    let data = await parseWeather(location);\n\n    buildFeedback(data);\n});\n\nfunction buildFeedback(data){\n    let dataList = [];\n\n    let city = document.getElementById('city');\n    let date = document.getElementById('date');\n    let temperature = document.getElementById('temperature');\n    let description = document.getElementById('description');\n    let icon = document.getElementById('icon');\n\n    dataList.push(city, date, temperature, description, icon);\n\n    dataList.forEach((item) => {\n        if(item.id === 'icon'){\n            item.textContent = getIcon(data[item.id]);\n            return;\n        }\n        item.textContent = data[item.id];\n    });\n}\n\n\n\n\n","let WEATHER_API_KEY = 'CEV4R37JX8ZLJHYNFZK2UC9VK'\n\n\nasync function getWeather(city){\n    try{\n        const response = await fetch(\n            `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${city}/today?key=${WEATHER_API_KEY}`\n        );\n\n\n        const data = await response.json();\n\n        return data;\n    } catch(error){\n        console.log(error);\n    }\n}\n\nexport default async function parseWeather(city){\n    try{\n        const weather = await getWeather(city);\n\n        const weatherData = {\n            date: weather.currentConditions.datetime,\n            city: weather.resolvedAddress,\n            temperature: weather.currentConditions.temp,\n            feelsLike: weather.currentConditions.feelslike,\n            description: weather.currentConditions.conditions,\n            icon: weather.currentConditions.icon,\n        };\n\n        console.log(weatherData);\n\n        return weatherData;\n    } catch(error){\n        console.log(error);\n    }\n}"],"names":["search","document","getElementById","weatherIcons","addEventListener","async","e","preventDefault","location","value","data","dataList","city","date","temperature","description","icon","push","forEach","item","id","textContent","getIcon","buildFeedback","weather","response","fetch","json","error","console","log","getWeather","weatherData","currentConditions","datetime","resolvedAddress","temp","feelsLike","feelslike","conditions","parseWeather"],"sourceRoot":""}